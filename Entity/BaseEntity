
///
/// By : Vladimir Khorikov
/// Source : https://enterprisecraftsmanship.com/2014/11/08/domain-object-base-class/
///
/// Note : 
/// There are three types of equality in enterprise software:
///  1. Reference equality means that two references refer to the same object in memory.
///  2. Identifier equality means that two different objects in memory refer to the same row in the database.
///  3. Logical equality means that two different objects and two different rows in the database are actually equal.
///     It might happen when an object doesnâ€™t have its own identity (such objects called value objects),
///     and thus we can treat two different objects with identical fields as logically equal.
///

public abstract class Entity
{
    public virtual long Id { get; protected set; }
    protected virtual object Actual => this;

    public override bool Equals(object obj)
    {
        var other = obj as Entity;

        if (other is null)
            return false;

        if (ReferenceEquals(this, other))
            return true;

        if (Actual.GetType() != other.Actual.GetType())
            return false;

        if (Id == 0 || other.Id == 0)
            return false;

        return Id == other.Id;
    }

    public static bool operator ==(Entity a, Entity b)
    {
        if (a is null && b is null)
            return true;

        if (a is null || b is null)
            return false;

        return a.Equals(b);
    }

    public static bool operator !=(Entity a, Entity b)
    {
        return !(a == b);
    }

    public override int GetHashCode()
    {
        return (Actual.GetType().ToString() + Id).GetHashCode();
    }
}
